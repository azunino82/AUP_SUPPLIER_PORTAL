PROCEDURE "AUPSUP_DATABASE.data.procedures.InboundDelivery::MM00_INB_DLV_LIST"(
IN USERID NVARCHAR(250),
IN IT_EXIDV TABLE (EXIDV NVARCHAR(20)),
IN IT_LIFNR TABLE (LIFNR NVARCHAR(10)),
IN IT_MATNR TABLE (MATNR NVARCHAR(40)),
IN IT_VBELN TABLE (VBELN NVARCHAR(10)),
IN IT_VERUR TABLE (VERUR NVARCHAR(35)),
IN IT_VGBEL TABLE (VGBEL NVARCHAR(10)),
IN I_LFDAT_FROM VARCHAR(8),
IN I_LFDAT_TO VARCHAR(8), 
IN I_WADAT_FROM VARCHAR(8),
IN I_WADAT_TO VARCHAR(8),
OUT out_table "AUPSUP_DATABASE.data.structures.InboundDelivery::OUT_HUStructure"
)  
	LANGUAGE SQLSCRIPT 
	SQL SECURITY INVOKER  AS
	
BEGIN

DECLARE ET_INB_DLV_LIKP "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_LIKPStructure";
DECLARE ET_INB_DLV_LIPS "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_LIPSStructure";
DECLARE ET_INB_DLV_VEKP "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_VEKPStructure";
DECLARE ET_INB_DLV_VEPO "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_VEPOStructure";
DECLARE counterRow INTEGER;
DECLARE metaid NVARCHAR(50);
DECLARE IT_LIFNR_VENDOR TABLE (LIFNR NVARCHAR(10));
DECLARE IT_EKORG TABLE (EKORG NVARCHAR(4)); 

DECLARE IT_CUST_FIELDS TABLE(
CUST_FIELD NVARCHAR(30),
SOURCE_TABLE NVARCHAR(30),
SOURCE_FIELD NVARCHAR(30)
);

DECLARE I_WITH_HU_DATA  NVARCHAR(1);
DECLARE T_PROFILO_CONFERMA TABLE (BSTAE NVARCHAR(4));

create local temporary table #IT_EKORG (EKORG NVARCHAR(4));
create local temporary table #IT_LIFNR (LIFNR NVARCHAR(10));
create local temporary table #CUST_FIELDS (
	"CUST_FIELD" NVARCHAR(30),
	"SOURCE_TABLE" NVARCHAR(30),
	"SOURCE_FIELD" NVARCHAR(30)
);

IT_EKORG = SELECT * FROM #IT_EKORG;
IT_LIFNR_VENDOR = SELECT * FROM #IT_LIFNR;

/*SE non passo nessun fornitore li cerco in base a se sono buyer o supplier*/
SELECT COUNT(*) into counterRow FROM :IT_LIFNR;
IF (counterRow = 0) THEN
	/*estrazione dei fornitori se ho un metafornitore quindi sono un supplier*/
	SELECT COUNT(*) into counterRow FROM "AUPSUP_DATABASE.data.tables::T_USERID_METAID" 
	WHERE USERID = :USERID;
	
	IF (counterRow > 0) THEN
	/*SONO SUPPLIER*/
		SELECT METAID into metaid FROM "AUPSUP_DATABASE.data.tables::T_USERID_METAID" 
		WHERE USERID = :USERID;
		
		IT_LIFNR = SELECT LIFNR
		FROM "AUPSUP_DATABASE.data.tables::T_METAID_FORN" 
		WHERE METAID = :metaid;
		
	ELSE
		/*SONO BUYER: chiamo la bapi per avere tutti i "miei fornitori"*/
		CALL "AUPSUP_DATABASE.data.procedures.Orders::MM00_VENDOR_LIST"(:userid,'','',:IT_LIFNR_VENDOR,:IT_EKORG,:BUYER_LIFNR);
		IT_LIFNR = SELECT DISTINCT LIFNR FROM :BUYER_LIFNR;
	END IF;
END IF;

/*inizializzazione tabelle input*/
SELECT 'X' INTO I_WITH_HU_DATA FROM "AUPSUP_DATABASE.data.synonyms::DUMMY";

IT_CUST_FIELDS = SELECT * FROM #CUST_FIELDS;

/*La funzionalit√† deve listare tutti gli ordini/item (non chiusi al consegnato, non cancellati) 
con Profilo di Conferma che preveda un tipo conferma uguale a 2 (Avviso di consegna)*/
T_PROFILO_CONFERMA = SELECT PROFILO_CONTROLLO AS BSTAE FROM "AUPSUP_DATABASE.data.tables::T_PROFILI_CONFERMA" WHERE TIPO_CONFERMA = '2';	

-- TODO VIRTUAL PROCEDURES CALL "AUPSUP_DATABASE.data.tables::VIRTUAL_MM00_INB_DLV_LIST"(:IT_CUST_FIELDS,:IT_EXIDV,:IT_LIFNR,:IT_MATNR,:IT_VBELN,:IT_VERUR,:IT_VGBEL,:I_LFDAT_FROM,:I_LFDAT_TO,:I_WADAT_FROM,:I_WADAT_TO,:I_WITH_HU_DATA,:ET_INB_DLV_LIKP,:ET_INB_DLV_LIPS,:ET_INB_DLV_VEKP,:ET_INB_DLV_VEPO);

SELECT * FROM :ET_INB_DLV_LIKP;
SELECT * FROM :ET_INB_DLV_LIPS;
SELECT * FROM :ET_INB_DLV_VEKP;
SELECT * FROM :ET_INB_DLV_VEPO;

out_table = SELECT DISTINCT a.MANDT,a.SYSID,a.VENUM,b.VEPOS,b.VBELN,b.POSNR,a.EXIDV,b.MATNR,b.WERKS,b.TMENG FROM :ET_INB_DLV_VEKP AS a INNER JOIN :ET_INB_DLV_VEPO AS b ON a.VENUM  = b.VENUM;

DROP TABLE #IT_EKORG;
DROP TABLE #IT_LIFNR;
DROP TABLE #CUST_FIELDS;
END;
