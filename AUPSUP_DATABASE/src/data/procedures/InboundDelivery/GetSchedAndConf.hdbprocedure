PROCEDURE "AUPSUP_DATABASE.data.procedures.InboundDelivery::GetSchedAndConf"(
	IN userid VARCHAR(20),
	IN ebeln NVARCHAR(10),
	IN ebelp VARCHAR(5),
	OUT T_EKEH "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_EKEHStructure",
	OUT T_EKEK "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_EKEKStructure",
	OUT T_EKES TABLE (    
		"EBELN" NVARCHAR(10), 
    	"EBELP" VARCHAR(5), 
    	"ETENS" VARCHAR(4), 
    	"EINDT" VARCHAR(8), 
    	"EBTYP" NVARCHAR(2),
    	"LPEIN" NVARCHAR,
    	"UZEIT" VARCHAR(6),
    	"MENGE" DECIMAL(14,3),
    	"DABMG" DECIMAL(14,3),
    	"ESTKZ" NVARCHAR,
    	"KZDIS" NVARCHAR,
   		"XBLNR" NVARCHAR(35), 
    	"MPROF" NVARCHAR(4),
    	"EMATN" NVARCHAR(40),
    	"LIFEXPOS" NVARCHAR(6),
		"TYPE" NVARCHAR(1)),
	OUT T_EKET "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_EKETStructure",
	OUT T_EKKO "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_EKKOStructure",
	OUT T_EKPO "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_EKPOStructure")
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN

/*	T_EKKO = SELECT * FROM "AUPSUP_DATABASE.data.tables::ET_SAG_EKKO" WHERE EBELN = :ebeln;
	T_EKPO = SELECT * FROM "AUPSUP_DATABASE.data.tables::ET_SAG_EKPO" WHERE EBELN = :ebeln AND EBELP = :ebelp;
	T_EKES = SELECT * FROM "AUPSUP_DATABASE.data.tables::ET_SAG_EKES" WHERE EBELN = :ebeln AND EBELP = :ebelp AND EBTYP IN 
		(SELECT CAT_CONFERMA FROM "AUPSUP_DATABASE.data.tables::T_PROFILI_CONFERMA" WHERE TIPO_CONFERMA = '2');
	T_EKET = SELECT * FROM "AUPSUP_DATABASE.data.tables::ET_SAG_EKET" WHERE EBELN = :ebeln AND EBELP = :ebelp ORDER BY EINDT;
	*/
DECLARE IT_BSART TABLE(ESART NVARCHAR(4));
DECLARE IT_BSTAE TABLE(BSTAE NVARCHAR(4)); /*TBD*/
DECLARE IT_BSTYP TABLE(BSTYP NVARCHAR(1));
DECLARE IT_EBELN TABLE (EBELN NVARCHAR(10));
DECLARE IT_EBELP TABLE (EBELP VARCHAR(5));
DECLARE IT_CUST_FIELDS TABLE(
CUST_FIELD NVARCHAR(30),
SOURCE_TABLE NVARCHAR(30),  
SOURCE_FIELD NVARCHAR(30)
);
DECLARE IT_EKORG TABLE (EKORG NVARCHAR(4));
DECLARE IT_LIFNR TABLE (ELIFN NVARCHAR(10));
DECLARE IT_MATNR TABLE (MATNR NVARCHAR(40));
DECLARE IT_VENDOR TABLE (LIFNR NVARCHAR(10),EKORG NVARCHAR(4));
DECLARE IT_WERKS_VP TABLE (WERKS NVARCHAR(4));

DECLARE I_EGLKZ_P_EXCL NVARCHAR(1) DEFAULT 'X';
DECLARE I_ELIKZ_P_EXCL NVARCHAR(1) DEFAULT 'X';
DECLARE I_LOEKZ_K_EXCL NVARCHAR(1) DEFAULT 'X';
DECLARE I_LOEKZ_P_EXCL NVARCHAR(1) DEFAULT 'X';
DECLARE I_MEMORY_EXCL NVARCHAR(1) DEFAULT 'X';
DECLARE I_RETPO_P_EXCL NVARCHAR(1) DEFAULT 'X';
DECLARE I_WITH_EKEH NVARCHAR(1) DEFAULT 'X';
DECLARE I_WITH_EKEK NVARCHAR(1) DEFAULT 'X';
DECLARE I_WITH_EKES NVARCHAR(1) DEFAULT 'X';
DECLARE I_WITH_EKET NVARCHAR(1) DEFAULT 'X';
DECLARE I_WITH_EKKO NVARCHAR(1) DEFAULT 'X';
DECLARE I_WITH_EKPO NVARCHAR(1) DEFAULT 'X';
DECLARE I_EINDT_FROM VARCHAR(8);
DECLARE I_EINDT_TO VARCHAR(8);

DECLARE ET_INB_DLV_LIPS "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_LIPSStructure";
DECLARE T_EKES_STR "AUPSUP_DATABASE.data.structures.InboundDelivery::ET_INB_DLV_EKESStructure";
create local temporary table #IT_BSART (ESART NVARCHAR(4));
create local temporary table #IT_BSTYP (BSTYP NVARCHAR(1));
create local temporary table #IT_VENDOR (LIFNR NVARCHAR(10),EKORG NVARCHAR(4));
create local temporary table #IT_LIFNR_VENDOR (LIFNR NVARCHAR(10));
create local temporary table #IT_EKORG (EKORG NVARCHAR(4));
create local temporary table #IT_WERKS_VP (WERKS NVARCHAR(4));
create local temporary table #IT_LIFNR (ELIFN NVARCHAR(10));
create local temporary table #IT_MATNR (MATNR NVARCHAR(40));

IT_BSART = SELECT * FROM #IT_BSART;
IT_BSTYP = SELECT * FROM #IT_BSTYP;
IT_VENDOR = SELECT * FROM #IT_VENDOR;
IT_LIFNR_VENDOR = SELECT * FROM #IT_LIFNR_VENDOR;
IT_EKORG = SELECT * FROM #IT_EKORG;
IT_LIFNR = SELECT * FROM #IT_LIFNR;
IT_MATNR = SELECT * FROM #IT_MATNR;
IT_WERKS_VP = SELECT * FROM #IT_WERKS_VP;
IT_CUST_FIELDS = SELECT * FROM "AUPSUP_DATABASE.data.tables::T_MM00_VENDOR_LIST_IT_CUST_FIELDS";

IT_EBELN = SELECT :ebeln AS EBELN FROM "AUPSUP_DATABASE.data.synonyms::DUMMY";
IT_EBELP = SELECT :ebelp AS EBELP FROM "AUPSUP_DATABASE.data.synonyms::DUMMY";

	CALL "AUPSUP_DATABASE.data.virtualProcedures::VIRTUAL_MM00_INB_DLV_DOC_LIST"(:IT_BSART,:IT_BSTAE,:IT_BSTYP,:IT_CUST_FIELDS,:IT_EBELN,:IT_EKORG,:IT_LIFNR,:IT_MATNR,:IT_VENDOR,:IT_WERKS_VP,:I_EGLKZ_P_EXCL,:I_EINDT_FROM,:I_EINDT_TO,
	:I_ELIKZ_P_EXCL,:I_LOEKZ_K_EXCL,:I_LOEKZ_P_EXCL,:I_MEMORY_EXCL,:I_RETPO_P_EXCL,:I_WITH_EKEH,:I_WITH_EKEK,:I_WITH_EKES,:I_WITH_EKET,:I_WITH_EKKO,:I_WITH_EKPO,
:T_EKEH,:T_EKEK,:T_EKES_STR,:T_EKET,:T_EKKO,:T_EKPO,:ET_INB_DLV_LIPS);

T_EKEH = SELECT * FROM :T_EKEH WHERE EBELP = :ebelp;
T_EKEK = SELECT * FROM :T_EKEK WHERE EBELP = :ebelp;
T_EKES_STR = SELECT * FROM :T_EKES_STR WHERE EBELP = :ebelp;
T_EKET = SELECT * FROM :T_EKET WHERE EBELP = :ebelp;
T_EKKO = SELECT * FROM :T_EKKO WHERE EBELP = :ebelp;
T_EKPO = SELECT * FROM :T_EKPO WHERE EBELP = :ebelp;

T_EKES = SELECT a.EBELN, a.EBELP, a.ETENS, a.EINDT, a.EBTYP, a.LPEIN, a.UZEIT, a.MENGE, a.DABMG, a.ESTKZ, a.KZDIS, a.XBLNR, a.MPROF, a.EMATN, a.LIFEXPOS,
(SELECT TIPO_CONFERMA FROM "AUPSUP_DATABASE.data.tables::T_PROFILI_CONFERMA" WHERE CAT_CONFERMA = a.EBTYP and PROFILO_CONTROLLO = b.BSTAE) AS TYPE FROM :T_EKES_STR as a
INNER JOIN :T_EKPO as b
ON a.EBELN = b.EBELN and a.EBELP = b.EBELP;

DROP TABLE #IT_BSART;
DROP TABLE #IT_BSTYP;
DROP TABLE #IT_VENDOR;
DROP TABLE #IT_LIFNR_VENDOR;
DROP TABLE #IT_EKORG;
DROP TABLE #IT_LIFNR;
DROP TABLE #IT_MATNR;
DROP TABLE #IT_WERKS_VP;
END;
