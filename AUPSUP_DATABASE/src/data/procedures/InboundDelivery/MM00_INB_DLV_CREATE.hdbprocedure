PROCEDURE "AUPSUP_DATABASE.data.procedures.InboundDelivery::MM00_INB_DLV_CREATE"(
IN userid VARCHAR(250),
IN LIFNR NVARCHAR(10), -- serve per invio mail

IN LFART NVARCHAR(4),
IN VERUR NVARCHAR(35), 
IN LFDAT VARCHAR(8),
IN WADAT VARCHAR(8), 
IN BTGEW DECIMAL(16,3), 
IN GEWEI NVARCHAR(3),
IN VOLUM DECIMAL(16,3),
IN VOLEH NVARCHAR(3),
IN NOTES NCLOB,

IN IT_HU_DETAIL TABLE(
REFHU NVARCHAR(10),
RFPOS VARCHAR(6),
MATNR NVARCHAR(40),
WERKS NVARCHAR(4),
TMENG DECIMAL(14,3),
VRKME NVARCHAR(3)
),
 
IN IT_HU_HEADER TABLE (
REFHU NVARCHAR(10),
EXIDV2 NVARCHAR(20),
VHILM NVARCHAR(40)), 

IN IT_ITEM TABLE (
RFPOS VARCHAR(6),
VGBEL NVARCHAR(10),
VGPOS VARCHAR(6),
WERKS NVARCHAR(4),
MATNR NVARCHAR(40),
LFIMG DECIMAL(14, 3),
VRKME NVARCHAR(3),
LICHN NVARCHAR(15),
VFDAT VARCHAR(8),
HSDAT VARCHAR(8)), 

IN IT_SERIAL_NO TABLE (
RFPOS VARCHAR(6),
SERNR NVARCHAR(18)),

OUT E_RETURN TABLE (
MSGTY NVARCHAR(1),
MESSAGE NVARCHAR(220),
MSGNO VARCHAR(3),
MSGID NVARCHAR(20)), 

OUT E_VBELN NVARCHAR(10)
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER  AS
	
BEGIN

DECLARE IT_CUST_FIELDS TABLE(
CUST_FIELD NVARCHAR(30),
SOURCE_TABLE NVARCHAR(30),
SOURCE_FIELD NVARCHAR(30)
);

DECLARE T_PLANTS TABLE ( WERKS NVARCHAR(4));
DECLARE I_WITH_HU_DATA  NVARCHAR(1);
DECLARE counter INTEGER;

create local temporary table #CUST_FIELDS (
	"CUST_FIELD" NVARCHAR(30),
	"SOURCE_TABLE" NVARCHAR(30),
	"SOURCE_FIELD" NVARCHAR(30)
);

/*inizializzazione tabelle input*/
SELECT 'X' INTO I_WITH_HU_DATA FROM "AUPSUP_DATABASE.data.synonyms::DUMMY";
T_PLANTS = SELECT null as WERKS FROM "AUPSUP_DATABASE.data.synonyms::DUMMY";

IT_CUST_FIELDS = SELECT * FROM #CUST_FIELDS;

CALL "AUPSUP_DATABASE.data.virtualProcedures::VIRTUAL_MM00_INB_DLV_CREATE"(:IT_HU_DETAIL,:IT_HU_HEADER,:IT_ITEM,:IT_SERIAL_NO,:LFART,:VERUR,:LFDAT,:WADAT,:BTGEW,:GEWEI,
:VOLUM,:VOLEH,:NOTES,:E_RETURN,:E_VBELN);

/*SE non ci sono errore invio notiiiche ed Email per ogno plant*/
T_PLANTS = SELECT DISTINCT WERKS FROM :IT_ITEM;
SELECT COUNT(*) INTO counter FROM :E_RETURN;
IF(counter = 0) THEN
	DECLARE CURSOR cursorPLANT FOR SELECT * FROM :T_PLANTS;

	/*TODO SELECT COUNT(*) INTO counter FROM :T_PLANTS;
	IF (counter>0) THEN
		FOR cursorRow AS cursorPLANT DO
			CALL "PORTAL"."it.alteaup.supplier.portal.notifications.storedProcedures::InsertNotification" (:userid,'',:E_VBELN,'SPE','IID',cursorRow.WERKS,'','IT',:LIFNR,'','');
		END FOR;
	END IF; 
    */
	
END IF;
 
DROP TABLE #CUST_FIELDS;

END;
