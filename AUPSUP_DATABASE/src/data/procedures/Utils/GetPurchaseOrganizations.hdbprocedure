PROCEDURE "AUPSUP_DATABASE.data.procedures.Utils::GetPurchaseOrganizations" ( 
IN userid NVARCHAR(250),
OUT outTable TABLE (PURCH_ORG NVARCHAR(4),DESCR NVARCHAR(255),TOT INTEGER)
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	READS SQL DATA AS
BEGIN	

	DECLARE metaid VARCHAR(50);
	DECLARE bu NVARCHAR(20);
	DECLARE buyer NVARCHAR(250);
	DECLARE purch_org NVARCHAR(255);
	DECLARE exist_metaid INTEGER;
	/*DECLARE T_PURCH_ORG TABLE (BU NVARCHAR(20), SYSID NVARCHAR(30),PURCH_ORG NVARCHAR(4));*/
	
	/* cerco il metafornitore dall'apposita tabella */
	/* se metaid esite allora sono un fornitore */
    SELECT COUNT(*) into exist_metaid FROM "AUPSUP_DATABASE.data.tables::T_USERID_METAID" WHERE USERID = :userid;
 	IF  exist_metaid > 0 THEN	 	
 		BEGIN
 			SELECT "METAID" into metaid FROM "AUPSUP_DATABASE.data.tables::T_USERID_METAID" WHERE USERID = :userid;

		 	/*cerco la BU nella tabella apposita se il metafornitore Ã¨ attivo AP*/
		 	SELECT "BU" into bu FROM "AUPSUP_DATABASE.data.tables::T_METAID_BU" WHERE METAID = :metaid and STATO = 'AP';
		 	
		 	outTable = SELECT PURCH_ORG, PURCH_DESCR AS DESCR, COUNT(1)AS TOT FROM "AUPSUP_DATABASE.data.tables::T_BU_PURCH_ORG" WHERE BU = :bu GROUP BY PURCH_ORG, PURCH_DESCR;
		 	
		 	
		 	 /*T_PURCH_ORG = SELECT * FROM "AUPSUP_DATABASE.data.tables::T_BU_PURCH_ORG" WHERE BU = :bu;/* and SYSID = 'ECC1';*/
		 	
		 	/*estraggo le purchase organizations dalla tabella */
		 	/*outTable = SELECT a.PURCH_ORG as PURCH_ORG, b.DESCRIPTION as DESCR, COUNT(1) AS TOT FROM :T_PURCH_ORG as a INNER JOIN "AUPSUP_DATABASE.data.tables::T_PURCH_ORG" as b ON a.PURCH_ORG = b.CODE and a.SYSID = b.SYSID GROUP BY PURCH_ORG, DESCRIPTION;*/
	 	END;
 	ELSE
	 	BEGIN
	 	/*Se non esiste il metaid provo a cercare l'utente come buyer*/
	 		SELECT "USERID" into buyer FROM "AUPSUP_DATABASE.data.tables::T_BUYERS" WHERE USERID = :userid;
	 		/* se esiste come buyer estraggo le purchase org del buyer e le splitto con l'apposita funzione TMP::TF_SPLIT_STRING*/
	 		IF :buyer <> '' THEN
		 		BEGIN
		 			SELECT PURCH_ORG into purch_org FROM "AUPSUP_DATABASE.data.tables::T_BUYERS" WHERE USERID = :userid;
		 			IF :purch_org <> '' THEN
			 			BEGIN
			 			
			 				/*T_PURCH_ORG = SELECT null AS BU, null AS SYSID, OUTPUT_SPLIT AS PURCH_ORG FROM "_SYS_BIC"."TMP::TF_SPLIT_STRING" (:purch_org);
			 			
							/*outTable = SELECT OUTPUT_SPLIT AS PURCH_ORG, null as DESCR, 1 AS TOT FROM "_SYS_BIC"."TMP::TF_SPLIT_STRING" (:purch_org) group by OUTPUT_SPLIT;*/
							/*outTable = SELECT a.PURCH_ORG as PURCH_ORG, b.DESCRIPTION as DESCR, COUNT(1) AS TOT FROM :T_PURCH_ORG as a INNER JOIN "AUPSUP_DATABASE.data.tables::T_PURCH_ORG" as b ON a.PURCH_ORG = b.CODE GROUP BY PURCH_ORG, DESCRIPTION;*/
							/*outTable = SELECT PURCH_ORG, PURCH_DESCR as DESCR, COUNT(1) AS TOT FROM "AUPSUP_DATABASE.data.tables::T_BU_PURCH_ORG" GROUP BY PURCH_ORG, PURCH_DESCR;*/
							outTable = SELECT PLANT AS PURCH_ORG, PLANT_DESCR AS DESCR, 1 AS TOT FROM "AUPSUP_DATABASE.data.tables::T_BU_PLANT" WHERE PLANT IN (SELECT OUTPUT_SPLIT AS PLANT FROM "AUPSUP_DATABASE.data.functions::TF_SPLIT_STRING" (:purch_org));

			 			END;
		 			END IF;
		 		END;
	 		END IF;
	 	END;
 	END IF;
 	

END;
