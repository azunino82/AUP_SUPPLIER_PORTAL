PROCEDURE "AUPSUP_DATABASE.data.procedures.Utils::GetUserBU"(
	IN userid NVARCHAR(250),
	OUT out_table TABLE(CODE NVARCHAR(4),DESCR NVARCHAR(255))
	) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	READS SQL DATA AS
BEGIN

DECLARE exist_metaid INTEGER;
DECLARE metaid VARCHAR(50);
DECLARE bu NVARCHAR(20);
DECLARE buyer NVARCHAR(20);
DECLARE plants NVARCHAR(255); 
DECLARE o_plants TABLE(EWERK NVARCHAR(4));
DECLARE o_bu TABLE(BU NVARCHAR(20));
SELECT COUNT(*) into exist_metaid FROM "AUPSUP_DATABASE.data.tables::T_USERID_METAID" WHERE USERID = :userid;
/* controllo se l'utente Ã¨ buyer o supplier */
 	IF exist_metaid > 0 THEN	 	
 		BEGIN
 		SELECT METAID into metaid FROM "AUPSUP_DATABASE.data.tables::T_USERID_METAID" WHERE USERID = :userid;
 			out_table = SELECT a.BU AS CODE, b.DESCRIPTION as DESCR FROM "AUPSUP_DATABASE.data.tables::T_METAID_BU" as a INNER JOIN "AUPSUP_DATABASE.data.tables::T_BU" as b ON a.BU = b.CODE WHERE a.METAID = :metaid; 
	 	END;
 	ELSE
	 	BEGIN
	 	/*Se non esiste il metaid provo a cercare l'utente come buyer*/
	 		SELECT "USERID" into buyer FROM "AUPSUP_DATABASE.data.tables::T_BUYSERS" WHERE USERID = :userid;
	 		/* se esiste come buyer estraggo i plant del buyer e le splitto con l'apposita funzione TMP::TF_SPLIT_STRING*/
	 		IF :buyer <> '' THEN
		 		BEGIN
		 		
		 		out_table = SELECT a.BU AS CODE, b.DESCRIPTION as DESCR FROM "AUPSUP_DATABASE.data.tables::T_BUYSERS" as a INNER JOIN "AUPSUP_DATABASE.data.tables::T_BU" as b ON a.BU = b.CODE WHERE a.USERID = :userid;
		 			/*SELECT PLANTS into plants FROM "AUPSUP_DATABASE.data.tables::T_BUYSERS" WHERE USERID = :userid;
		 			IF :plants <> '' THEN
			 			BEGIN
							o_bu = SELECT BU FROM "AUPSUP_DATABASE.data.tables::T_BU_PLANT" WHERE PLANT IN (SELECT OUTPUT_SPLIT AS EWERK FROM "_SYS_BIC"."TMP::TF_SPLIT_STRING" (:plants));
							out_table = SELECT DISTINCT CODE, DESCRIPTION AS DESCR FROM "AUPSUP_DATABASE.data.tables::T_BU" WHERE CODE IN (SELECT * FROM :o_bu);
			 			END;
		 			END IF;*/
		 		END;
	 		END IF;
	 	END;
 	END IF; 

END;