PROCEDURE "AUPSUP_DATABASE.data.procedures.Schedulers::ClearConfirms" ()
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER AS
BEGIN

DECLARE I_BSART NVARCHAR(4);
DECLARE GG_ESTRAZIONE INTEGER DEFAULT 0;
DECLARE TODAY_DATE DATE;
DECLARE END_DATE DATE;
DECLARE COUNTER INTEGER;
DECLARE IT_BSART TABLE (ESART NVARCHAR(4));
DECLARE CURRENT_SYSID NVARCHAR(30);
DECLARE IT_CUST_FIELDS TABLE (CUST_FIELD NVARCHAR(30),SOURCE_TABLE NVARCHAR(30),SOURCE_FIELD NVARCHAR(30));
DECLARE IT_EBELN TABLE (EBELN NVARCHAR(10));
DECLARE IT_EBELP TABLE (EBELP VARCHAR(5));
DECLARE IT_EKGRP TABLE (EKGRP NVARCHAR(3));
DECLARE IT_EKORG TABLE (EKORG NVARCHAR(4));
DECLARE IT_LIFNR TABLE (ELIFN NVARCHAR(10));
DECLARE out_anagrafica TABLE(METAID VARCHAR(50), DESCR NVARCHAR(255));
DECLARE out_lifnr TABLE(METAID VARCHAR(50), LIFNR NVARCHAR(10), DESCR NVARCHAR(35));
DECLARE IT_MATNR TABLE (MATNR NVARCHAR(40));
DECLARE IT_WERKS TABLE (EWERK NVARCHAR(4),DESCR NVARCHAR(255));
DECLARE I_BSTYP TABLE (BSTYP NVARCHAR(1));
DECLARE counterRow INTEGER;
DECLARE ET_SAG_EKEH "AUPSUP_DATABASE.data.structures.SchedulingAgreement::ET_SAG_EKEHStructure";
DECLARE ET_SAG_EKEK "AUPSUP_DATABASE.data.structures.SchedulingAgreement::ET_SAG_EKEKStructure";
DECLARE ET_SAG_EKES "AUPSUP_DATABASE.data.structures.SchedulingAgreement::ET_SAG_EKESStructure";
DECLARE ET_SAG_EKET "AUPSUP_DATABASE.data.structures.SchedulingAgreement::ET_SAG_EKETStructure";
DECLARE ET_SAG_EKKO "AUPSUP_DATABASE.data.structures.SchedulingAgreement::ET_SAG_EKKOStructure";
DECLARE ET_SAG_EKPO "AUPSUP_DATABASE.data.structures.SchedulingAgreement::ET_SAG_EKPOStructure";
DECLARE C_TIMESTAMP TIMESTAMP; 
DECLARE T_TO_CONF "AUPSUP_DATABASE.data.tables::T_APPROVE_SAG_EKKO_EKPO";

create local temporary table #IT_CUST_FIELDS (CUST_FIELD NVARCHAR(30),SOURCE_TABLE NVARCHAR(30),SOURCE_FIELD NVARCHAR(30));
create local temporary table #IT_EKGRP (EKGRP NVARCHAR(3));
create local temporary table #IT_MATNR (MATNR NVARCHAR(40));
create local temporary table #IT_LIFNR (ELIFN NVARCHAR(10));
create local temporary table #IT_BSTYP (BSTYP NVARCHAR(1));
create local temporary table #IT_BSART (ESART NVARCHAR(4));
create local temporary table #IT_WERKS (EWERK NVARCHAR(4),DESCR NVARCHAR(255));
create local temporary table #IT_EBELP (EBELP VARCHAR(5));
create local temporary table #IT_EKORG (EKORG NVARCHAR(4));

INSERT INTO #IT_BSTYP VALUES ('L');
INSERT INTO #IT_BSTYP VALUES ('F');

IT_CUST_FIELDS = SELECT * FROM #IT_CUST_FIELDS;
IT_EKGRP = SELECT * FROM #IT_EKGRP;
IT_MATNR = SELECT * FROM #IT_MATNR;
IT_LIFNR = SELECT * FROM #IT_LIFNR;
I_BSTYP = SELECT * FROM #IT_BSTYP;
IT_BSART = SELECT * FROM #IT_BSART;
IT_WERKS = SELECT * FROM #IT_WERKS;
IT_EBELP = SELECT * FROM #IT_EBELP;
IT_EKORG = SELECT * FROM #IT_EKORG;

select CURRENT_TIMESTAMP INTO C_TIMESTAMP FROM "AUPSUP_DATABASE.data.synonyms::DUMMY";
SELECT SYSID INTO CURRENT_SYSID FROM "AUPSUP_DATABASE.data.tables::T_BCKND_SYSTEMS";

INSERT INTO "AUPSUP_DATABASE.data.tables::T_LOGS" (SERVICE_NAME,CALLED_METHOD,DATA,STATUS,MESSAGE,LOG_TYPE,SID,USERID,LOG_DATE_TIME) VALUES ('JOB CLEAR ORD','JOB',null,200,'Start CLEAR ORD','I',:CURRENT_SYSID,'JOB_USER',:C_TIMESTAMP);    

IT_EBELN = SELECT DISTINCT EBELN FROM "AUPSUP_DATABASE.data.tables::T_APPROVE_SAG_EKKO_EKPO" WHERE STATUS = 'RC' AND CONF_TYPE='QUA';

SELECT COUNT(*) INTO counterRow FROM :IT_EBELN;
IF (counterRow>0) THEN 

   CALL "AUPSUP_DATABASE.data.virtualProcedures::VIRTUAL_MM00_SAG_DOC_LIST"(:IT_BSART,:I_BSTYP,:IT_CUST_FIELDS,:IT_EBELN,:IT_EBELP,:IT_EKGRP,:IT_EKORG,:IT_LIFNR,:IT_MATNR,'I',:IT_WERKS,'X','X','X','X','X','X','X','X','X','X','X','X','X','X',:ET_SAG_EKEH,:ET_SAG_EKEK,:ET_SAG_EKES,:ET_SAG_EKET,:ET_SAG_EKKO,:ET_SAG_EKPO);

      BEGIN
         DECLARE CURSOR cursorEKKOEKPO FOR SELECT DISTINCT * FROM "AUPSUP_DATABASE.data.tables::T_APPROVE_SAG_EKES_EKET" WHERE (EBELN,EBELP,ETENS) NOT IN (SELECT EBELN,EBELP,ETENR FROM :ET_SAG_EKET) AND STATUS = 'RC' AND CONF_TYPE='QUA';
         FOR cursorRow AS cursorEKKOEKPO DO
            INSERT INTO "AUPSUP_DATABASE.data.tables::T_LOGS" (SERVICE_NAME,CALLED_METHOD,DATA,STATUS,MESSAGE,LOG_TYPE,SID,USERID,LOG_DATE_TIME) VALUES ('JOB CLEAR ORD','JOB',null,200,'APR ORD n: ' || cursorRow.EBELN || ' - ' || cursorRow.EBELP || ' - ' || cursorRow.ETENS,'I',:CURRENT_SYSID,'JOB_USER',:C_TIMESTAMP);    
         END FOR;
      END;


   UPDATE "AUPSUP_DATABASE.data.tables::T_APPROVE_SAG_EKKO_EKPO" SET STATUS = 'SK', MODIFY_STATUS_DATE = :C_TIMESTAMP WHERE (EBELN,EBELP) NOT IN (SELECT EBELN,EBELP FROM :ET_SAG_EKET) AND STATUS = 'RC' AND CONF_TYPE='QUA';
   UPDATE "AUPSUP_DATABASE.data.tables::T_APPROVE_SAG_EKES_EKET" SET STATUS = 'SK', MODIFY_STATUS_DATE = :C_TIMESTAMP WHERE (EBELN,EBELP,ETENS) NOT IN (SELECT EBELN,EBELP,ETENR FROM :ET_SAG_EKET) AND STATUS = 'RC' AND CONF_TYPE='QUA';

END IF;

DROP TABLE #IT_CUST_FIELDS;
DROP TABLE #IT_EKGRP;
DROP TABLE #IT_MATNR;
DROP TABLE #IT_LIFNR;
DROP TABLE #IT_BSTYP;
DROP TABLE #IT_BSART;
DROP TABLE #IT_WERKS;
DROP TABLE #IT_EBELP;
DROP TABLE #IT_EKORG;

END