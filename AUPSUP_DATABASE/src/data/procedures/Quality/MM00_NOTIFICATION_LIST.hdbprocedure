PROCEDURE "AUPSUP_DATABASE.data.procedures.Quality::MM00_NOTIFICATION_LIST"(
IN userid NVARCHAR(250), 
IN IT_QMNUM TABLE (QMNUM NVARCHAR(12)),
IN IT_QMART TABLE (QMART NVARCHAR(2)),
IN IT_MAWERK TABLE (MAWERK NVARCHAR(4)),
IN IT_LIFNUM TABLE (LIFNUM NVARCHAR(10)),
IN IT_MATNR TABLE (MATNR NVARCHAR(40)),
IN IT_IDNLF TABLE (IDNLF NVARCHAR(35)), 
IN I_SPRAS NVARCHAR(1),
IN IT_ERNAM TABLE(ERNAM NVARCHAR(12)), 
IN IT_STAT TABLE(STAT NVARCHAR(5)), 

OUT ET_NOTIF_VIQMEL "AUPSUP_DATABASE.data.structures.Quality::ET_NOTIF_VIQMELStructure",
OUT ET_NOTIF_VIQMFE "AUPSUP_DATABASE.data.structures.Quality::ET_NOTIF_VIQMFEStructure",
OUT ET_NOTIF_VIQMUR "AUPSUP_DATABASE.data.structures.Quality::ET_NOTIF_VIQMURStructure",
OUT ET_NOTIF_VIQMSM "AUPSUP_DATABASE.data.structures.Quality::ET_NOTIF_VIQMSMStructure",
OUT ET_NOTIF_VIQMMA "AUPSUP_DATABASE.data.structures.Quality::ET_NOTIF_VIQMMAStructure",

OUT ET_NC_WITH_STATUS_COMPLETED TABLE (
	QMNUM NVARCHAR(12)
)
)  
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER  AS 
	 
BEGIN

DECLARE DOKAR NVARCHAR(3);
DECLARE STRAGE_CAT NVARCHAR(10);
DECLARE LAST_VERSION NVARCHAR(1);
DECLARE IT_CUST_FIELDS TABLE(
CUST_FIELD NVARCHAR(30),
SOURCE_TABLE NVARCHAR(30),
SOURCE_FIELD NVARCHAR(30)
); 
DECLARE IN_QMART_SELECTION TABLE(
QMART NVARCHAR(2),
STAT NVARCHAR(5),
VIQMFE NVARCHAR(1),
VIQMUR NVARCHAR(1),
VIQMSM NVARCHAR(1),
VIQMMA NVARCHAR(1));

DECLARE counter INTEGER;
DECLARE out_lifnr TABLE(METAID VARCHAR(50), LIFNR NVARCHAR(10), DESCR NVARCHAR(35));
DECLARE out_anagrafica TABLE(METAID VARCHAR(50), DESCR NVARCHAR(255));
/*ricerca BU*/
DECLARE counterRow INTEGER;

DECLARE IT_BUKRS TABLE (
	BUKRS NVARCHAR(4)
);

DECLARE IT_MATKL TABLE (
	MATKL NVARCHAR(9)
);

DECLARE IT_DISPO TABLE (
	DISPO NVARCHAR(9)
);

create local temporary table #ET_NOTIF_VIQMEL LIKE "AUPSUP_DATABASE.data.structures.Quality::ET_NOTIF_VIQMELStructure";
create local temporary table #CUST_FIELDS (
	"CUST_FIELD" NVARCHAR(30),
	"SOURCE_TABLE" NVARCHAR(30),
	"SOURCE_FIELD" NVARCHAR(30)
);

create local temporary table #IT_BUKRS (
	BUKRS NVARCHAR(4)
);

create local temporary table #IT_MATKL (
	MATKL NVARCHAR(9)
);

create local temporary table #IT_DISPO (
	DISPO NVARCHAR(9)
);


/*inizializzazione tabelle input*/
IT_CUST_FIELDS = SELECT * FROM #CUST_FIELDS;
IN_QMART_SELECTION = SELECT NULL AS QMART,NULL AS STAT,'' AS VIQMFE,'' AS VIQMUR,'' AS VIQMSM, '' AS VIQMMA FROM "AUPSUP_DATABASE.data.synonyms::DUMMY";
IT_BUKRS = SELECT * FROM #IT_BUKRS;
IT_MATKL = SELECT * FROM #IT_MATKL;
IT_DISPO = SELECT * FROM #IT_DISPO;

/*selezione per gestione tipi documento*/
SELECT DMS_DOC_TYPE_OUT INTO DOKAR FROM "AUPSUP_DATABASE.data.tables::T_DOCUMENT_MANAGEMENT" WHERE APPLICATION = 'NC'; --AND SYSID = 'ASD' AND CLASSIFICATION = 'REP_8D';
SELECT DMS_VERSION_OUT INTO LAST_VERSION FROM "AUPSUP_DATABASE.data.tables::T_DOCUMENT_MANAGEMENT" WHERE APPLICATION = 'NC'; --AND SYSID = 'ASD' AND CLASSIFICATION = 'REP_8D';
SELECT STOR_CAT INTO STRAGE_CAT FROM "AUPSUP_DATABASE.data.tables::T_DOCUMENT_MANAGEMENT" WHERE APPLICATION = 'NC'; --AND SYSID = 'ASD' AND CLASSIFICATION = 'REP_8D';

/*selezione dei tipi avviso da passare alla ricerca*/
--IN_QMART_SELECTION = SELECT TIPO_AVVISO AS QMART, IN_PROCESS AS STAT, T_DIFETTI AS VIQMFE, T_CAUSE AS VIQMUR, T_MISURE AS VIQMSM, T_INTERVENTI AS VIQMMA FROM "AUPSUP_DATABASE.data.tables::T_AVVISI_QUALITA";

-- PASSAIAMO SEMPRE 'D' in questo modo la bapi estrae sempre tutto. poi sar√† il servizio xsodata e il layout a mettere visibile o no tutta la tabella in base al customizing di TESTATA T_AVVISI_QUALITA
IN_QMART_SELECTION = SELECT TIPO_AVVISO AS QMART, IN_PROCESS AS STAT, 'D' AS VIQMFE, 'D' AS VIQMUR, 'D' AS VIQMSM, T_INTERVENTI AS VIQMMA FROM "AUPSUP_DATABASE.data.tables::T_AVVISI_QUALITA";

/*se non viene passato il fornitore dal portale lo valorizzo io in base all'utenza*/
SELECT COUNT(*) INTO counter FROM :IT_LIFNUM;
IF counter = 0 THEN
	CALL "AUPSUP_DATABASE.data.procedures.Utils::GetMetasupplierList"(:userid,:out_anagrafica,:out_lifnr);
	IT_LIFNUM = SELECT LIFNR AS LIFNUM FROM :out_lifnr;
END IF;


	CALL "AUPSUP_DATABASE.data.virtualProcedures::VIRTUAL_MM00_NOTIFICATION_LIST"(:IT_BUKRS,:IT_CUST_FIELDS,:IT_DISPO,:IT_ERNAM,:IT_IDNLF,:IT_LIFNUM,:IT_MATKL,:IT_MATNR,:IT_MAWERK,:IT_QMART,:IN_QMART_SELECTION,:IT_QMNUM,:IT_STAT,:DOKAR,:STRAGE_CAT,:LAST_VERSION,:I_SPRAS,:ET_NOTIF_VIQMEL,:ET_NOTIF_VIQMFE,:ET_NOTIF_VIQMMA,:ET_NOTIF_VIQMSM,:ET_NOTIF_VIQMUR);
 

    ET_NOTIF_VIQMEL = SELECT * FROM :ET_NOTIF_VIQMEL;
    ET_NOTIF_VIQMFE = SELECT * FROM :ET_NOTIF_VIQMFE ORDER BY FENUM;
    ET_NOTIF_VIQMMA = SELECT * FROM :ET_NOTIF_VIQMMA ORDER BY MANUM;
    ET_NOTIF_VIQMSM = SELECT * FROM :ET_NOTIF_VIQMSM ORDER BY MANUM;
    ET_NOTIF_VIQMUR = SELECT * FROM :ET_NOTIF_VIQMUR ORDER BY URNUM;   

 
/*prendo il plant dal portale e non da sap*/
INSERT INTO #ET_NOTIF_VIQMEL SELECT * FROM :ET_NOTIF_VIQMEL;

UPDATE #ET_NOTIF_VIQMEL SET NAME1_WRK = (SELECT PLANT_DESCR FROM "AUPSUP_DATABASE.data.tables::T_BU_PLANT" WHERE PLANT = MAWERK);

ET_NOTIF_VIQMEL = SELECT * FROM #ET_NOTIF_VIQMEL;

-- seleziono tutte le NC che hanno stato COMPLETO in base alla tabella di customizing. mi serve per nascondere bottoni sulla worklist
ET_NC_WITH_STATUS_COMPLETED = SELECT a.QMNUM FROM :ET_NOTIF_VIQMEL as a INNER JOIN "AUPSUP_DATABASE.data.tables::T_AVVISI_QUALITA" as b ON a.QMART = b.TIPO_AVVISO AND a.STAT = b.COMPLETED;

DROP TABLE #ET_NOTIF_VIQMEL;
DROP TABLE #CUST_FIELDS;
DROP TABLE #IT_BUKRS;
DROP TABLE #IT_MATKL;
DROP TABLE #IT_DISPO;

END;
